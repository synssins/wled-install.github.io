name: nightly_build_ac

on:
    schedule:
      - cron: '15 1 * * *'
    workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        wget https://github.com/wled/WLED/archive/refs/heads/main.zip -O /tmp/mm.zip
        unzip /tmp/mm.zip -d /tmp
    - name: Run PlatformIO
      run: |
        cd /tmp/WLED-main
        echo " " >> platformio.ini
        echo '[env:esp32c3dev_ARE]'  >> platformio.ini
        echo 'extends = env:esp32c3dev' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=\"ESP32C3_4MB_ARE\" ${common.build_flags} ${esp32c3.build_flags}' >> platformio.ini
        echo 'custom_usermods = audioreactive' >> platformio.ini
        
        npm install
        
        pio run -e nodemcuv2 || pio run -e nodemcuv2 || true
        pio run -e nodemcuv2_compat || pio run -e nodemcuv2_compat || true
        pio run -e nodemcuv2_160 || pio run -e nodemcuv2_160 || true
        
        sed -i -e 's/def create_release(source)/def create_release(source,builddir)/g' ./pio-scripts/output_bins.py
        sed -i -e 's/create_release(str(target\[0]))/create_release(str(target\[0]),builddir)/g' ./pio-scripts/output_bins.py
        sed -i -e 's/shutil\.copy(source, release_file)/shutil\.copy(source, release_file);partition_file = release_file\.replace("\.bin","_partitions\.bin");shutil\.copy(os\.path\.join(builddir,"partitions\.bin"), partition_file)/g' ./pio-scripts/output_bins.py
        # cat ./pio-scripts/output_bins.py
        
        pio run -e esp32dev || pio run -e esp32dev || true
        pio run -e esp32_eth || pio run -e esp32_eth || true
        pio run -e esp32_wrover || pio run -e esp32_wrover || true
        pio run -e esp32c3dev || pio run -e esp32c3dev || true
        pio run -e lolin_s2_mini || pio run -e lolin_s2_mini || true
        pio run -e esp32s3dev_8MB_opi || pio run -e esp32s3dev_8MB_opi || true
        pio run -e esp32s3_4M_qspi || pio run -e esp32s3_4M_qspi || true
        pio run -e esp32s3dev_16MB_opi || pio run -e esp32s3dev_16MB_opi || true
        pio run -e esp32c3dev_ARE || pio run -e esp32c3dev_ARE || true        
        # cat platformio.ini
      env:
        PLATFORMIO_CI_SRC: /tmp/WLED-main
    - name: Copy Files
      run: |
        cd $GITHUB_WORKSPACE
        git rm -r $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build/*.bin || true
        cp /tmp/WLED-main/build_output/release/*.bin $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build/
        date -I | tr -d '\n' >$GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build/lastupdate.txt
        echo -n ", version: " >>$GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build/lastupdate.txt
        versionvalue=($(jq -r '.version' /tmp/WLED-main/package.json))
        echo -n "$versionvalue" >>$GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build/lastupdate.txt
    - name: Commit Files
      run: |
        cd $GITHUB_WORKSPACE
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git add $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build/*.bin
        git add $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build/lastupdate.txt
        git commit -m "Commit AC Nightly Build"
        git push origin main
